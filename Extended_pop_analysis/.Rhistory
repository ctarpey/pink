FST_NAeven_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% NAeven_top_failed$Locus,]
FST_ASIAodd_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% ASIAodd_top_failed$Locus,]
FST_ASIAeven_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% ASIAeven_top_failed$Locus,]
FST_NAodd_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% NAodd_top_failed$Locus,]
head(FST_NAeven_top_failed_snps)
dim(FST_NAeven_top_failed_snps)
##Keep X number of loci that have the highest FST #<--------------------------------------------dictates the number of loci
NAeven_top_failed <- FST_NAeven_failed[1:50,]
ASIAeven_top_failed <- FST_ASIAeven_failed[1:50,]
NAodd_top_failed <- FST_NAodd_failed[1:50,]
ASIAodd_top_failed <- FST_ASIAodd_failed[1:50,]
head(NAeven_top_failed)
head(ASIAeven_top_failed)
head(NAodd_top_failed)
head(ASIAodd_top_failed)
##merge the FST_file the SNP_positions_all to see what the SNP positions are for the loci that failed.
masterFST_file <- merge(SNP_positions_all, FST_file, by= "Tag")
masterFST_file <- rename(masterFST_file, Locus = Locus.x, FST_Locus = Locus.y)
head(masterFST_file)
#trim columns we dont need
masterFST_file$Pos <-NULL
masterFST_file$SNP_Index <-NULL
masterFST_file$SNP_tag_index <-NULL
head(masterFST_file)
###Pull out the positions of the SNPS in the top x number of loci with the highest FST that failed the SNP postion flag
FST_NAeven_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% NAeven_top_failed$Locus,]
FST_ASIAeven_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% ASIAeven_top_failed$Locus,]
FST_ASIAodd_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% ASIAodd_top_failed$Locus,]
FST_NAodd_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% NAodd_top_failed$Locus,]
head(FST_NAeven_top_failed_snps)
dim(FST_NAeven_top_failed_snps)
head(FST_NAeven_top_failed_snps)
dim(FST_NAeven_top_failed_snps)
### Change the name of the file to reflect the choice of loci
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/FST_NAeven_top_failed_snps.txt", "wb")
### Change the name of the file to reflect the choice of loci
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/FST_NAeven_top50_failed_snps.txt", "wb")
write.table(FST_NAeven_top_failed_snps,outputFile,quote=FALSE,row.names=FALSE,col.names=TRUE,eol="\n")
close(outputFile)
head(FST_ASIAeven_top_failed_snps)
dim(FST_ASIAeven_top_failed_snps)
### Change the name of the file to reflect the choice of loci
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/FST_ASIAeven_top50_failed_snps.txt", "wb")
write.table(FST_ASIAeven_top_failed_snps,outputFile,quote=FALSE,row.names=FALSE,col.names=TRUE,eol="\n")
close(outputFile)
head(FST_ASIAodd_top_failed_snps)
dim(FST_ASIAodd_top_failed_snps)
### Change the name of the file to reflect the choice of loci
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/FST_ASIAodd_top50_failed_snps.txt", "wb")
write.table(FST_ASIAodd_top_failed_snps,outputFile,quote=FALSE,row.names=FALSE,col.names=TRUE,eol="\n")
close(outputFile)
head(FST_NAodd_top_failed_snps)
dim(FST_NAodd_top_failed_snps)
### Change the name of the file to reflect the choice of loci
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/FST_NAodd_top50_failed_snps.txt", "wb")
write.table(FST_NAodd_top_failed_snps,outputFile,quote=FALSE,row.names=FALSE,col.names=TRUE,eol="\n")
close(outputFile)
##Keep X number of loci that have the highest FST #<--------------------------------------------dictates the number of loci
NAeven_top_failed <- FST_NAeven_failed[1:100,]
NAodd_top_failed <- FST_NAodd_failed[1:100,]
ASIAeven_top_failed <- FST_ASIAeven_failed[1:100,]
ASIAodd_top_failed <- FST_ASIAodd_failed[1:100,]
head(NAeven_top_failed)
head(ASIAeven_top_failed)
head(NAodd_top_failed)
head(ASIAodd_top_failed)
##merge the FST_file the SNP_positions_all to see what the SNP positions are for the loci that failed.
masterFST_file <- merge(SNP_positions_all, FST_file, by= "Tag")
masterFST_file <- rename(masterFST_file, Locus = Locus.x, FST_Locus = Locus.y)
head(masterFST_file)
#trim columns we dont need
masterFST_file$Pos <-NULL
masterFST_file$SNP_Index <-NULL
masterFST_file$SNP_tag_index <-NULL
head(masterFST_file)
###Pull out the positions of the SNPS in the top x number of loci with the highest FST that failed the SNP postion flag
FST_NAeven_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% NAeven_top_failed$Locus,]
FST_ASIAeven_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% ASIAeven_top_failed$Locus,]
FST_ASIAodd_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% ASIAodd_top_failed$Locus,]
FST_NAodd_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% NAodd_top_failed$Locus,]
FST_NAodd_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% NAodd_top_failed$Locus,]
head(FST_NAeven_top_failed_snps)
dim(FST_NAeven_top_failed_snps)
### Change the name of the file to reflect the choice of loci
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/FST_NAeven_top100_failed_snps.txt", "wb")
write.table(FST_NAeven_top_failed_snps,outputFile,quote=FALSE,row.names=FALSE,col.names=TRUE,eol="\n")
close(outputFile)
head(FST_ASIAeven_top_failed_snps)
dim(FST_ASIAeven_top_failed_snps)
write.table(FST_ASIAeven_top_failed_snps,outputFile,quote=FALSE,row.names=FALSE,col.names=TRUE,eol="\n")
### Change the name of the file to reflect the choice of loci
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/FST_ASIAeven_top100_failed_snps.txt", "wb")
close(outputFile)
head(FST_ASIAodd_top_failed_snps)
dim(FST_ASIAodd_top_failed_snps)
### Change the name of the file to reflect the choice of loci
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/FST_ASIAodd_top100_failed_snps.txt", "wb")
write.table(FST_ASIAodd_top_failed_snps,outputFile,quote=FALSE,row.names=FALSE,col.names=TRUE,eol="\n")
close(outputFile)
head(FST_NAodd_top_failed_snps)
dim(FST_NAodd_top_failed_snps)
### Change the name of the file to reflect the choice of loci
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/FST_NAodd_top100_failed_snps.txt", "wb")
write.table(FST_NAodd_top_failed_snps,outputFile,quote=FALSE,row.names=FALSE,col.names=TRUE,eol="\n")
close(outputFile)
### Change the name of the file to reflect the choice of loci
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/FST_ASIAeven_top100_failed_snps.txt", "wb")
write.table(FST_ASIAeven_top_failed_snps,outputFile,quote=FALSE,row.names=FALSE,col.names=TRUE,eol="\n")
close(outputFile)
head(FST_ASIAodd_top_failed_snps)
####### overlap of the Even NA and ASian failed
Even_failed <- overlap(FST_NAeven_top_failed_snps, FST_ASIAeven_top_failed_snps)
####### overlap of the Even NA and ASian failed
Even_failed <- intersect(FST_NAeven_top_failed_snps, FST_ASIAeven_top_failed_snps)
length(Even_failed)
####### overlap of the Odd NA and ASian failed
Odd_failed<- intersect(FST_NAodd_top_failed_snps, FST_ASIAodd_top_failed_snps)
length(Odd_failed)
head(Even_failed)
head(NAeven_top_failed)
####### overlap of the Even NA and ASian failed
Even_failed <- intersect(NAeven_top_failed$Locus, ASIAeven_top_failed$Locus)
length(Even_failed)
head(Even_failed)
####### overlap of the Odd NA and ASian failed
Odd_failed<- intersect(NAodd_top_failed$Locus, ASIAodd_top_failed$Locus)
length(Odd_failed)
head(Odd_failed)
Odd_failed
head(NAodd_top_failed)
head(ASIAodd_top_failed)
#########overlap between two panels
overlap <- intersect(NA_ASIA_even_overlap, NA_ASIA_odd_overlap)
length(overlap)
head(overlap)
## make a new dataframe that has the FST info for the overlapping set
Lineage_overlap_FST <- FST_file[FST_file$Locus %in% overlap,]
Lineage_overlap_FST_sort <-Lineage_overlap_FST[order(Lineage_overlap_FST$ALL_noSusit, decreasing = TRUE),]
head(Lineage_overlap_FST_sort)
dim(Lineage_overlap_FST_sort)
########## What if we are interested in the top X FST loci that were excluded from the combined analysis because of the SNPS_inRange flag?
##pull out the Failed in the SNPS_inRange flag
FST_NAeven_failed <- FST_file_NAeven_sort[which(FST_file_NAeven_sort$Even_SNPs_InRange == "FALSE"),]
FST_ASIAeven_failed <- FST_file_ASIAeven_sort[which(FST_file_ASIAeven_sort$Even_SNPs_InRange == "FALSE"),]
FST_ASIAodd_failed <- FST_file_ASIAodd_sort[which(FST_file_ASIAodd_sort$Odd_SNPs_InRange == "FALSE"),]
FST_NAodd_failed <- FST_file_NAodd_sort[which(FST_file_NAodd_sort$Odd_SNPs_InRange == "FALSE"),]
##Keep X number of loci that have the highest FST #<--------------------------------------------dictates the number of loci
NAeven_top_failed <- FST_NAeven_failed[1:100,]
ASIAeven_top_failed <- FST_ASIAeven_failed[1:100,]
NAodd_top_failed <- FST_NAodd_failed[1:100,]
ASIAodd_top_failed <- FST_ASIAodd_failed[1:100,]
head(NAeven_top_failed)
head(ASIAeven_top_failed)
head(NAodd_top_failed)
head(ASIAodd_top_failed)
##merge the FST_file the SNP_positions_all to see what the SNP positions are for the loci that failed.
masterFST_file <- merge(SNP_positions_all, FST_file, by= "Tag")
masterFST_file <- rename(masterFST_file, Locus = Locus.x, FST_Locus = Locus.y)
head(masterFST_file)
#trim columns we dont need
masterFST_file$Pos <-NULL
masterFST_file$SNP_Index <-NULL
masterFST_file$SNP_tag_index <-NULL
head(masterFST_file)
###Pull out the positions of the SNPS in the top x number of loci with the highest FST that failed the SNP postion flag
FST_NAeven_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% NAeven_top_failed$Locus,]
FST_ASIAeven_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% ASIAeven_top_failed$Locus,]
FST_ASIAodd_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% ASIAodd_top_failed$Locus,]
FST_NAodd_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% NAodd_top_failed$Locus,]
head(FST_NAeven_top_failed_snps)
##Keep X number of loci that have the highest FST #<--------------------------------------------dictates the number of loci
NAeven_top_failed <- FST_NAeven_failed[1:50,]
ASIAeven_top_failed <- FST_ASIAeven_failed[1:50,]
NAodd_top_failed <- FST_NAodd_failed[1:50,]
ASIAodd_top_failed <- FST_ASIAodd_failed[1:50,]
head(ASIAeven_top_failed)
head(NAeven_top_failed)
head(NAodd_top_failed)
head(ASIAodd_top_failed)
##merge the FST_file the SNP_positions_all to see what the SNP positions are for the loci that failed.
masterFST_file <- merge(SNP_positions_all, FST_file, by= "Tag")
masterFST_file <- rename(masterFST_file, Locus = Locus.x, FST_Locus = Locus.y)
head(masterFST_file)
#trim columns we dont need
masterFST_file$Pos <-NULL
masterFST_file$SNP_Index <-NULL
masterFST_file$SNP_tag_index <-NULL
head(masterFST_file)
###Pull out the positions of the SNPS in the top x number of loci with the highest FST that failed the SNP postion flag
FST_NAeven_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% NAeven_top_failed$Locus,]
FST_ASIAeven_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% ASIAeven_top_failed$Locus,]
FST_ASIAodd_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% ASIAodd_top_failed$Locus,]
FST_NAodd_top_failed_snps <- masterFST_file[masterFST_file$FST_Locus %in% NAodd_top_failed$Locus,]
head(FST_NAeven_top_failed_snps)
dim(FST_NAeven_top_failed_snps)
####### overlap of the Even NA and ASian failed
Even_failed <- intersect(NAeven_top_failed$Locus, ASIAeven_top_failed$Locus)
length(Even_failed)
head(Even_failed)
####### overlap of the Odd NA and ASian failed
Odd_failed<- intersect(NAodd_top_failed$Locus, ASIAodd_top_failed$Locus)
length(Odd_failed)
head(Odd_failed)
#### Use the combination of the 50 top failed from each of the groups for the lineage. So take the top 50 from each and then do a union
####### overlap of the Even NA and ASian failed
Even_failed_union <- union(NAeven_top_failed$Locus, ASIAeven_top_failed$Locus)
length(Even_failed_union)
head(Even_failed_union)
####### overlap of the Odd NA and ASian failed
Odd_failed_union<- union(NAodd_top_failed$Locus, ASIAodd_top_failed$Locus)
length(Odd_failed_union)
head(Odd_failed_union)
head(FST_NAodd_top_failed_snps)
head(FST_file)
NAeven_set_avgFST <- mean(NAeven_set$NA_even)
NAeven_set_avgFST
NAeven_set_maxFST <- max(NAeven_set$NA_even)
NAeven_set_maxFST
NAeven_set_minFST <- min(NAeven_set$NA_even)
NAeven_set_minFST
print( "NAeven FST max, min, average: ", NAeven_set_avgFST, NAeven_set_maxFST, NAeven_set_minFST)
print( cat("NAeven FST max, min, average: ", NAeven_set_avgFST, NAeven_set_maxFST, NAeven_set_minFST))
cat("NAeven FST max, min, average: ", NAeven_set_avgFST, NAeven_set_maxFST, NAeven_set_minFST)
#top FST loci for ASIAeven,
#change the variable to the number you want
ASIAeven_var <- 500 #<--------------------------------------------dictates the number of loci
ASIAeven_set <- FST_file_ASIAeven_sort_inRange[1:ASIAeven_var,]
ASIAeven_set_avgFST <- mean(ASIAeven_set$ASIA_even)
ASIAeven_set_maxFST <- max(ASIAeven_set$NA_even)
ASIAeven_set_minFST <- min(ASIAeven_set$NA_even)
ASIAeven_set_avgFST <- mean(ASIAeven_set$ASIA_even)
ASIAeven_set_maxFST <- max(ASIAeven_set$ASIA_even)
ASIAeven_set_minFST <- min(ASIAeven_set$ASIA_even)
cat("ASIAeven FST max, min, average: ", ASIAeven_set_avgFST, ASIAeven_set_maxFST, ASIAeven_set_minFST)
###set operations to see how many overlap:
NA_ASIA_even_overlap <- union(NAeven_set$Locus, ASIAeven_set$Locus)
################# ODD
#top FST loci for NA_odd,
#change the variable to the number you want
NAodd_var <- 500 #<--------------------------------------------dictates the number of loci
NAodd_set <- FST_file_NAodd_sort_inRange[1:NAodd_var,]
NAodd_set_avgFST <- mean(NAodd_set$NA_odd)
NAodd_set_maxFST <- max(NAodd_set$NA_odd)
NAodd_set_minFST <- min(NAodd_set$NA_odd)
cat("NAodd FST max, min, average: ", NAodd_set_avgFST, NAodd_set_maxFST, NAodd_set_minFST)
NAodd_set_minFST <- min(NAodd_set$NA_odd)
cat("NAodd FST max, min, average: ", NAodd_set_avgFST, NAodd_set_maxFST, NAodd_set_minFST)
NAodd_set_minFST
NAodd_set_maxFST
#top FST loci for ASIAodd,
#change the variable to the number you want
ASIAodd_var <- 500 #<--------------------------------------------dictates the number of loci
ASIAodd_set_avgFST <- mean(ASIAodd_set$ASIA_odd)
ASIAodd_set <- FST_file_ASIAodd_sort_inRange[1:ASIAodd_var,]
ASIAodd_set_maxFST <- max(ASIAodd_set$ASIA_odd)
ASIAodd_set_minFST <- min(ASIAodd_set$ASIA_odd)
cat("ASIAodd FST max, min, average: ", ASIAodd_set_avgFST, ASIAodd_set_maxFST, ASIAodd_set_minFST)
head(Lineage_overlap_FST_sort)
head( NA_ASIA_odd_overlap_FST_sort)
dim(NA_ASIA_odd_overlap_FST_sort)
head(Even_failed_union)
## Add these list of failed to the list of passed to get a list to pull the sequences to make a FASTA file
Odd_failed_passed_list <- append(NA_ASIA_odd_overlap_FST_sort, Odd_failed_union)
head(Odd_failed_passed_list)
head(NA_ASIA_odd_overlap_FST_sort)
## Add these list of failed to the list of passed to get a list to pull the sequences to make a FASTA file
Odd_failed_passed_list <- append(NA_ASIA_odd_overlap_FST_sort$Locus, Odd_failed_union)
head(NA_ASIA_odd_overlap_FST_sort)
head(Odd_failed_passed_list)
dim(Odd_failed_passed_list)
length(Odd_failed_passed_list)
length(Odd_failed_union)
length(NA_ASIA_odd_overlap_FST_sort)
dim(NA_ASIA_odd_overlap_FST_sort)
924+69
## Add these list of failed to the list of passed to get a list to pull the sequences to make a FASTA file
Even_failed_passed_list <- append(NA_ASIA_even_overlap_FST_sort$Locus, Even_failed_union)
head(Even_failed_passed_list)
length(Even_failed_passed_list)
### Change the name of the file
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/Even_failed_passed_list.txt", "wb")
write.table(Even_failed_passed_list,outputFile,quote=FALSE,row.names=FALSE,col.names=FALSE,eol="\n")
close(outputFile)
### Change the name of the file
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/Odd_failed_passed_list.txt", "wb")
write.table(Odd_failed_passed_list,outputFile,quote=FALSE,row.names=FALSE,col.names=FALSE,eol="\n")
close(outputFile)
#Make the failed loci their own table that has the many SNPS that they have.
head(masterFST_file)
#Make the failed loci their own table that has the many SNPS that they have.
Both_failed_union <- union(Odd_failed_union, Even_failed_union)
length(Both_failed_union)
head(Both)
head(Both_failed_union)
masterFST_file_failed_union <- masterFST_file[masterFST_file$FST_Locus %in% Both_failed_union,]
head(masterFST_file_failed_union)
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/masterFST_file_failed_union.txt", "wb")
write.table(masterFST_file_failed_union,outputFile,quote=FALSE,row.names=FALSE,col.names=FALSE,eol="\n")
close(outputFile)
head( NA_ASIA_odd_overlap_FST_sort)
###########Make a table that has the FST, Locus_FST, SNP Pos and SNP Flag for all the pass and failed loci together.
#combine the two failed lists, so both lineages in one
masterCombined_Both_Lineages <- union(Even_failed_passed_list, Odd_failed_passed_list)
length(masterCombined_Both_Lineages)
length(masterCombined_Both_Lineages)
length(masterCombined_BothLineages)
masterCombined_BothLineages
length(masterCombined_BothLineages)
#combine ALL THE LISTS, failed and passed, so both lineages in one
masterCombined_BothLineages <- union(Even_failed_passed_list, Odd_failed_passed_list)
length(masterCombined_BothLineages)
#Make the COMBINED loci list table
FST_file_COMBINED_table <- FST_file[FST_file$FST_Locus %in% masterCombined_BothLineages,]
head(FST_file_COMBINED_table)
head(FST_file)
#Make the COMBINED loci list table
FST_file_COMBINED_table <- FST_file[FST_file$Locus %in% masterCombined_BothLineages,]
head(FST_file_COMBINED_table)
dim(FST_file_COMBINED_table)
head(masterFST_file_failed_union)
### Change the name of the file
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/masterFST_file_failed_union.txt", "wb")
write.table(masterFST_file_failed_union,outputFile,quote=FALSE,row.names=FALSE,col.names=TRUE,eol="\n")
close(outputFile)
### Change the name of the file
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/FST_file_COMBINED_table_1809.txt", "wb")
write.table(FST_file_COMBINED_table,outputFile,quote=FALSE,row.names=FALSE,col.names=TRUE,eol="\n")
close(outputFile)
head(masterCombined_BothLineages)
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/Analysis/MarkerSelection/masterCombined_BothLineages_1809.txt", "wb")
write.table(masterCombined_BothLineages,outputFile,quote=FALSE,row.names=FALSE,col.names=FALSE,eol="\n")
close(outputFile)
head(FST_NAeven_top_failed_snps)
dim(FST_NAeven_top_failed_snps)
length(Even_failed)
head(Even_failed)
####### overlap of the Odd NA and ASian failed
Odd_failed<- intersect(NAodd_top_failed$Locus, ASIAodd_top_failed$Locus)
length(Odd_failed)
head(Odd_failed)
#########################################################################
#### Use the combination of the 50 top failed from each of the groups for the lineage. So take the top 50 from each and then do a union
####### overlap of the Even NA and ASian failed
Even_failed_union <- union(NAeven_top_failed$Locus, ASIAeven_top_failed$Locus)
length(Even_failed_union)
head(Even_failed_union)
####### overlap of the Odd NA and Asian failed
Odd_failed_union<- union(NAodd_top_failed$Locus, ASIAodd_top_failed$Locus)
length(Odd_failed_union)
head(Odd_failed_union)
library(ggplot2)
library(vcfR)
library(stringr)
library(dplyr)
library(gdata)
library(hierfstat)
library(adegenet)
library(argparse)
library(stringi)
library(reshape2)
######################################
################# EVEN
#top FST loci for NA_even,
#change the variable to the number you want
NAeven_var <- 500 #<--------------------------------------------dictates the number of loci
NAeven_set <- FST_file_NAeven_sort_inRange[1:NAeven_var,]
NAeven_set_avgFST <- mean(NAeven_set$NA_even)
NAeven_set_maxFST <- max(NAeven_set$NA_even)
NAeven_set_minFST <- min(NAeven_set$NA_even)
cat("NAeven FST max, min, average: ", NAeven_set_avgFST, NAeven_set_maxFST, NAeven_set_minFST)
ASIAeven_set <- FST_file_ASIAeven_sort_inRange[1:ASIAeven_var,]
#top FST loci for ASIAeven,
#change the variable to the number you want
ASIAeven_var <- 500 #<--------------------------------------------dictates the number of loci
ASIAeven_set_avgFST <- mean(ASIAeven_set$ASIA_even)
ASIAeven_set_maxFST <- max(ASIAeven_set$ASIA_even)
ASIAeven_set_minFST <- min(ASIAeven_set$ASIA_even)
cat("ASIAeven FST max, min, average: ", ASIAeven_set_avgFST, ASIAeven_set_maxFST, ASIAeven_set_minFST)
cat("NAeven FST max, min, average: ",NAeven_set_maxFST, NAeven_set_minFST, NAeven_set_avgFST )
cat("ASIAeven FST max, min, average: ", ASIAeven_set_maxFST, ASIAeven_set_minFST, ASIAeven_set_avgFST )
###set operations to see how many overlap:
NA_ASIA_even_overlap <- union(NAeven_set$Locus, ASIAeven_set$Locus)
length(NA_ASIA_even_overlap)
## make a new dataframe that has the FST info for the overlapping set
NA_ASIA_even_overlap_FST <- FST_file[FST_file$Locus %in% NA_ASIA_even_overlap,]
NA_ASIA_even_overlap_FST_sort <-NA_ASIA_even_overlap_FST[order(NA_ASIA_even_overlap_FST$EVEN, decreasing = TRUE),]
head( NA_ASIA_even_overlap_FST_sort)
dim(NA_ASIA_even_overlap_FST_sort)
################# ODD
#top FST loci for NA_odd,
#change the variable to the number you want
NAodd_var <- 500 #<--------------------------------------------dictates the number of loci
NAodd_set <- FST_file_NAodd_sort_inRange[1:NAodd_var,]
NAodd_set_maxFST <- max(NAodd_set$NA_odd)
NAodd_set_avgFST <- mean(NAodd_set$NA_odd)
NAodd_set_minFST <- min(NAodd_set$NA_odd)
cat("NAodd FST max, min, average: ", NAodd_set_maxFST, NAodd_set_minFST, NAodd_set_avgFST)
#top FST loci for ASIAodd,
#change the variable to the number you want
ASIAodd_var <- 500 #<--------------------------------------------dictates the number of loci
ASIAodd_set <- FST_file_ASIAodd_sort_inRange[1:ASIAodd_var,]
ASIAodd_set_avgFST <- mean(ASIAodd_set$ASIA_odd)
ASIAodd_set_maxFST <- max(ASIAodd_set$ASIA_odd)
ASIAodd_set_minFST <- min(ASIAodd_set$ASIA_odd)
cat("ASIAodd FST max, min, average: ", ASIAodd_set_maxFST, ASIAodd_set_minFST, ASIAodd_set_avgFST, )
cat("ASIAodd FST max, min, average: ", ASIAodd_set_maxFST, ASIAodd_set_minFST, ASIAodd_set_avgFST )
###set operations to see how many overlap:
NA_ASIA_odd_overlap <- union(NAodd_set$Locus, ASIAodd_set$Locus)
length(NA_ASIA_odd_overlap)
## make a new dataframe that has the FST info for the overlapping set
NA_ASIA_odd_overlap_FST <- FST_file[FST_file$Locus %in% NA_ASIA_odd_overlap,]
NA_ASIA_odd_overlap_FST_sort <-NA_ASIA_odd_overlap_FST[order(NA_ASIA_odd_overlap_FST$ODD, decreasing = TRUE),]
head( NA_ASIA_odd_overlap_FST_sort)
dim(NA_ASIA_odd_overlap_FST_sort)
#####################################################
#########overlap between two panels
overlap <- intersect(NA_ASIA_even_overlap, NA_ASIA_odd_overlap)
length(overlap)
##pull out the Failed in the SNPS_inRange flag
FST_NAeven_failed <- FST_file_NAeven_sort[which(FST_file_NAeven_sort$Even_SNPs_InRange == "FALSE"),]
FST_ASIAeven_failed <- FST_file_ASIAeven_sort[which(FST_file_ASIAeven_sort$Even_SNPs_InRange == "FALSE"),]
FST_ASIAodd_failed <- FST_file_ASIAodd_sort[which(FST_file_ASIAodd_sort$Odd_SNPs_InRange == "FALSE"),]
FST_NAodd_failed <- FST_file_NAodd_sort[which(FST_file_NAodd_sort$Odd_SNPs_InRange == "FALSE"),]
##Keep X number of loci that have the highest FST #<--------------------------------------------dictates the number of loci
NAeven_top_failed <- FST_NAeven_failed[1:50,]
ASIAeven_top_failed <- FST_ASIAeven_failed[1:50,]
NAodd_top_failed <- FST_NAodd_failed[1:50,]
ASIAodd_top_failed <- FST_ASIAodd_failed[1:50,]
##merge the FST_file the SNP_positions_all to see what the SNP positions are for the loci that failed.
masterFST_file <- merge(SNP_positions_all, FST_file, by= "Tag")
masterFST_file <- rename(masterFST_file, Locus = Locus.x, FST_Locus = Locus.y)
head(masterFST_file)
#trim columns we dont need
masterFST_file$Pos <-NULL
masterFST_file$SNP_Index <-NULL
masterFST_file$SNP_tag_index <-NULL
head(masterFST_file)
####### overlap of the Even NA and ASian failed
Even_failed <- intersect(NAeven_top_failed$Locus, ASIAeven_top_failed$Locus)
length(Even_failed)
####### overlap of the Odd NA and ASian failed
Odd_failed<- intersect(NAodd_top_failed$Locus, ASIAodd_top_failed$Locus)
length(Odd_failed)
#########################################################################
#### Use the combination of the 50 top failed from each of the groups for the lineage. So take the top 50 from each and then do a union
####### overlap of the Even NA and ASian failed
Even_failed_union <- union(NAeven_top_failed$Locus, ASIAeven_top_failed$Locus)
length(Even_failed_union)
head(Even_failed_union)
####### overlap of the Odd NA and Asian failed
Odd_failed_union<- union(NAodd_top_failed$Locus, ASIAodd_top_failed$Locus)
length(Odd_failed_union)
head(Odd_failed_union)
## Add these list of failed to the list of passed to get a list to pull the sequences to make a FASTA file
Even_failed_passed_list <- append(NA_ASIA_even_overlap_FST_sort$Locus, Even_failed_union)
head(Even_failed_passed_list)
length(Even_failed_passed_list)
Odd_failed_passed_list <- append(NA_ASIA_odd_overlap_FST_sort$Locus, Odd_failed_union)
head(Odd_failed_passed_list)
length(Odd_failed_passed_list)
###########Make a table that has the FST, Locus_FST, SNP Pos and SNP Flag for all the pass and failed loci tog.
#combine the two failed lists, so both lineages in one
Both_failed_union <- union(Odd_failed_union, Even_failed_union)
length(Both_failed_union)
head(Both_failed_union)
head(FST_NAeven_top_failed_snps)
FST_NAeven_top_failed_snps_avgFST <- mean(FST_NAeven_top_failed_snps$NA_even)
FST_NAeven_top_failed_snps_maxFST <- max(FST_NAeven_top_failed_snps$NA_even)
FST_NAeven_top_failed_snps_minFST <- min(FST_NAeven_top_failed_snps$NA_even)
cat("ASIAodd FST max, min, average: ", FST_NAeven_top_failed_snps_maxFST, FST_NAeven_top_failed_snps_minFST,
FST_NAeven_top_failed_snps_avgFST )
cat("NAeven FST max, min, average: ", FST_NAeven_top_failed_snps_maxFST, FST_NAeven_top_failed_snps_minFST,
FST_NAeven_top_failed_snps_avgFST )
FST_ASIAeven_top_failed_snps_avgFST <- mean(FST_ASIAeven_top_failed_snps$ASIA_even)
FST_ASIAeven_top_failed_snps_maxFST <- max(FST_ASIAeven_top_failed_snps$ASIA_even)
FST_ASIAeven_top_failed_snps_minFST <- min(FST_ASIAeven_top_failed_snps$ASIA_even)
cat("ASIAeven FST max, min, average: ", FST_ASIAeven_top_failed_snps_maxFST, FST_ASIAeven_top_failed_snps_minFST,
FST_ASIAeven_top_failed_snps_avgFST )
FST_ASIAodd_top_failed_snps_avgFST <- mean(FST_ASIAodd_top_failed_snps$ASIA_odd)
FST_ASIAodd_top_failed_snps_maxFST <- max(FST_ASIAodd_top_failed_snps$ASIA_odd)
FST_ASIAodd_top_failed_snps_minFST <- min(FST_ASIAodd_top_failed_snps$ASIA_odd)
cat("ASIAodd FST max, min, average: ", FST_ASIAodd_top_failed_snps_maxFST, FST_ASIAodd_top_failed_snps_minFST,
FST_ASIAodd_top_failed_snps_avgFST )
FST_NAodd_top_failed_snps_avgFST <- mean(FST_NAodd_top_failed_snps$NA_odd)
FST_NAodd_top_failed_snps_maxFST <- max(FST_NAodd_top_failed_snps$NA_odd)
FST_NAodd_top_failed_snps_minFST <- min(FST_NAodd_top_failed_snps$NA_odd)
cat("NAodd FST max, min, average: ", FST_NAodd_top_failed_snps_maxFST, FST_NAodd_top_failed_snps_minFST,
FST_NAodd_top_failed_snps_avgFST )
FST_NAeven_top_failed_snps_avgFST <- mean(FST_NAeven_top_failed_snps$NA_even)
FST_NAeven_top_failed_snps_maxFST <- max(FST_NAeven_top_failed_snps$NA_even)
FST_NAeven_top_failed_snps_minFST <- min(FST_NAeven_top_failed_snps$NA_even)
cat("NAeven FST max, min, average: ", FST_NAeven_top_failed_snps_maxFST, FST_NAeven_top_failed_snps_minFST,
FST_NAeven_top_failed_snps_avgFST )
head(FST_ASIAeven_top_failed_snps)
FST_ASIAeven_top_failed_snps_avgFST <- mean(FST_ASIAeven_top_failed_snps$ASIA_even)
FST_ASIAeven_top_failed_snps_maxFST <- max(FST_ASIAeven_top_failed_snps$ASIA_even)
FST_ASIAeven_top_failed_snps_minFST <- min(FST_ASIAeven_top_failed_snps$ASIA_even)
cat("ASIAeven FST max, min, average: ", FST_ASIAeven_top_failed_snps_maxFST, FST_ASIAeven_top_failed_snps_minFST,
FST_ASIAeven_top_failed_snps_avgFST )
FST_ASIAodd_top_failed_snps_avgFST <- mean(FST_ASIAodd_top_failed_snps$ASIA_odd)
FST_ASIAodd_top_failed_snps_maxFST <- max(FST_ASIAodd_top_failed_snps$ASIA_odd)
FST_ASIAodd_top_failed_snps_minFST <- min(FST_ASIAodd_top_failed_snps$ASIA_odd)
cat("ASIAodd FST max, min, average: ", FST_ASIAodd_top_failed_snps_maxFST, FST_ASIAodd_top_failed_snps_minFST,
FST_ASIAodd_top_failed_snps_avgFST )
head(FST_NAodd_top_failed_snps)
FST_NAodd_top_failed_snps_avgFST <- mean(FST_NAodd_top_failed_snps$NA_odd)
FST_NAodd_top_failed_snps_maxFST <- max(FST_NAodd_top_failed_snps$NA_odd)
FST_NAodd_top_failed_snps_minFST <- min(FST_NAodd_top_failed_snps$NA_odd)
cat("NAodd FST max, min, average: ", FST_NAodd_top_failed_snps_maxFST, FST_NAodd_top_failed_snps_minFST,
FST_NAodd_top_failed_snps_avgFST )
####### overlap of the Even NA and ASian failed
Even_failed <- intersect(NAeven_top_failed$Locus, ASIAeven_top_failed$Locus)
