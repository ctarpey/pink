#load genepop files
all_newGenos<-read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/batch_4_31485TAGS_genepop_4R.txt", colClasses="factor")
all_newGenos[1:5,1:5]
dim(all_newGenos)
calculateMAF<-function(genotypes){
genotypeList<-sort(unique(genotypes))
genotypeList<-genotypeList[genotypeList != "0000"]
allelesList1<-substr(genotypeList,1,2)
allelesList2<-substr(genotypeList,3,4)
allelesList<-unique(c(allelesList1,allelesList2))
allele1Counts<-sum(str_count(genotypes,allelesList[1]))
allele2Counts<-sum(str_count(genotypes,allelesList[2]))
if(length(allelesList)==1){
MAF=0
}else if(allele1Counts>=allele2Counts){
MAF<-allele2Counts/(allele1Counts+allele2Counts)
}else{
MAF<-allele1Counts/(allele1Counts+allele2Counts)
}
return(MAF)
}
allGenos_oneSNP<-apply(all_newGenos,2,calculateMAF)
allGenos_oneSNP[1:6,1:6]
library(ggplot2)
library(vcfR)
library(stringr)
library(dplyr)
library(gdata)
calculateMAF<-function(genotypes){
genotypeList<-sort(unique(genotypes))
genotypeList<-genotypeList[genotypeList != "0000"]
allelesList1<-substr(genotypeList,1,2)
allelesList2<-substr(genotypeList,3,4)
allelesList<-unique(c(allelesList1,allelesList2))
allele1Counts<-sum(str_count(genotypes,allelesList[1]))
allele2Counts<-sum(str_count(genotypes,allelesList[2]))
if(length(allelesList)==1){
MAF=0
}else if(allele1Counts>=allele2Counts){
MAF<-allele2Counts/(allele1Counts+allele2Counts)
}else{
MAF<-allele1Counts/(allele1Counts+allele2Counts)
}
return(MAF)
}
allGenos_oneSNP<-apply(all_newGenos,2,calculateMAF)
allGenos_oneSNP[1:6,1:6]
head(allGenos_oneSNP)
#put the results in a dataframe
allGenos_oneSNP_temp<-data.frame(value=allGenos_oneSNP,row.names=names(all_newGenos))
colnames(allGenos_oneSNP_temp)<-c("MAF")
head(allGenos_oneSNP_temp)
#concatenate the locus names to the results.
allLoci<-colnames(all_newGenos)
length(allLoci)
allGenos_oneSNP_temp$Locus<-allLoci
head(allGenos_oneSNP_temp)
#split the tags and snp positions
allGenos_oneSNP_temp_tags<-data.frame(str_split_fixed(allGenos_oneSNP_temp$Locus,"_",2))
colnames(allGenos_oneSNP_temp_tags)<-c("Tag","SNP")
head(allGenos_oneSNP_temp_tags)
allGenos_oneSNP_temp$Tag<-allGenos_oneSNP_temp_tags$Tag
allGenos_oneSNP_temp$SNP<-allGenos_oneSNP_temp_tags$SNP
head(allGenos_oneSNP_temp)
#Retain the SNP with the highest MAF per tag
# This one gives an output with the correct number of unique tags, and spot checked in excel
oneMAF<- allGenos_oneSNP_temp %>% group_by(Tag) %>% slice(which.max(MAF))
head(oneMAF)
library(ggplot2)
library(vcfR)
library(stringr)
library(dplyr)
library(gdata)
#install.packages("vcfR")
#install.packages("stringr")
#install.packages("ggplot2")
#install.packages("lazyeval")
#install.packages("adegenet")
#install.packages("dplyr")
#install.packages("DBI")
install.packages("tibble")
library(dplyr)
#Pink data filtering
library(ggplot2)
#Retain the SNP with the highest MAF per tag
# This one gives an output with the correct number of unique tags, and spot checked in excel
oneMAF<- allGenos_oneSNP_temp %>% group_by(Tag) %>% slice(which.max(MAF))
head(oneMAF)
#write.table(oneMAF,"Z:/WORK/TARPEY/Exp_Pink_Pops/STACKS/Filtering/oneMAF.txt",quote=FALSE,row.names=FALSE)
oneMAF<-as.data.frame(oneMAF)
head(oneMAF)
pink16681 <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/STACKS/pink16681.txt")
pink16681 <- unlist(pink16681, use.names = FALSE)
length(pink16681)
oneMAF_temp<-oneMAF$Locus
head(oneMAF_temp)
#locipassedMAF_temp<-locipassedMAF #to re-set
intersect_oneMAF_16681 <- intersect(oneMAF_temp, pink16681)
diff_oneMAF_16681 <-setdiff(pink16681,oneMAF_temp)
length(intersect_oneMAF_16681)
head(intersect_oneMAF_16681)
length(diff_oneMAF_16681)
head(diff_oneMAF_16681)
length(diff_oneMAF_16681)
head(diff_oneMAF_16681)
#filter dataset to include only one SNP per tag loci
length(oneMAF$Locus)
filteredGenos_oneSNP<-all_newGenos[,oneMAF$Locus]
dim(filteredGenos_oneSNP)
all_newGenos[1:5,1:5]
filteredGenos_oneSNP[1:5,1:5]
#format dataset to remove X from locus names
oneMAF_loci<-gsub("X","",oneMAF$Locus)
head(oneMAF_loci)
outputFile<-file("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/oneSNPpertag_subsetgenepop.txt", "wb")
write.table(oneMAF_loci,outputFile,quote=FALSE,row.names=FALSE,col.names=FALSE,eol="\n")
close(outputFile)
oneMAF_loci_whitelist<-data.frame(str_split_fixed(oneMAF_loci,"_",2))
HWE_table <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/batch_4_31485LOCI_HWE_results.txt" , colClasses="factor")
HWE_pops <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/POPsHWE.txt" , colClasses="factor")
HWE_pops <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/POPsHWE.txt" , colClasses="factor")
HWE_pops <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/POPsHWE.txt" , colClasses="factor")
colnames(HWE_table)<-HWE_pops
head(HWE_table)
head(HWE_table)
colnames(HWE_table)<-c("AMUR10", "AMUR11", "SUSIT13", "HAYLY09", "HAYLY10", "KOPE91T", "KOPE96T", "KUSHI06", "KUSHI07",
"LAKEL06", "LAKEL07", "NOME91", "NOME94", "SNOH03", "SNOH96", "SUSIT14", "TAUY09", "TAUY12")
head(HWE_table)
HWE_table <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/batch_4_31485LOCI_HWE_results.txt" , colClasses="factor")
HWE_table <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/batch_4_31485LOCI_HWE_results.txt" , rownames= 1, colClasses="factor")
HWE_table <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/batch_4_31485LOCI_HWE_results.txt" , row.names= 1, colClasses="factor")
#HWE_pops <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/POPsHWE.txt" , colClasses="factor")
colnames(HWE_table)<-c("AMUR10", "AMUR11", "SUSIT13", "HAYLY09", "HAYLY10", "KOPE91T", "KOPE96T", "KUSHI06", "KUSHI07",
"LAKEL06", "LAKEL07", "NOME91", "NOME94", "SNOH03", "SNOH96", "SUSIT14", "TAUY09", "TAUY12")
head(HWE_table)
HWE_table <- t(HWE_table)
head(HWE_table)
HWE_table[1:5,1:5]
HWE_table <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/batch_4_31485LOCI_HWE_results.txt" , row.names= 1, colClasses="factor")
#HWE_pops <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/POPsHWE.txt" , colClasses="factor")
colnames(HWE_table)<-c("AMUR10", "AMUR11", "SUSIT13", "HAYLY09", "HAYLY10", "KOPE91T", "KOPE96T", "KUSHI06", "KUSHI07",
"LAKEL06", "LAKEL07", "NOME91", "NOME94", "SNOH03", "SNOH96", "SUSIT14", "TAUY09", "TAUY12")
head(HWE_table)
HWE_table_t <- t(HWE_table)
HWE_table_t[1:5,1:5]
HWE_table <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/batch_4_31485LOCI_HWE_results.txt" ,
stringsAsFactors = FALSE, row.names= 1, colClasses="factor")
#HWE_pops <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/POPsHWE.txt" , colClasses="factor")
colnames(HWE_table)<-c("AMUR10", "AMUR11", "SUSIT13", "HAYLY09", "HAYLY10", "KOPE91T", "KOPE96T", "KUSHI06", "KUSHI07",
"LAKEL06", "LAKEL07", "NOME91", "NOME94", "SNOH03", "SNOH96", "SUSIT14", "TAUY09", "TAUY12")
head(HWE_table)
HWE_table_t <- t(HWE_table)
HWE_table_t[1:5,1:5]
HWE_table <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/batch_4_31485LOCI_HWE_results.txt" ,
stringsAsFactors = FALSE, row.names= 1)
#HWE_pops <- read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/POPsHWE.txt" , colClasses="factor")
colnames(HWE_table)<-c("AMUR10", "AMUR11", "SUSIT13", "HAYLY09", "HAYLY10", "KOPE91T", "KOPE96T", "KUSHI06", "KUSHI07",
"LAKEL06", "LAKEL07", "NOME91", "NOME94", "SNOH03", "SNOH96", "SUSIT14", "TAUY09", "TAUY12")
head(HWE_table)
HWE_table_t <- t(HWE_table, stringsAsFactors= FALSE)
HWE_table_t <- as.numeric(HWE_table_t)
HWE_table_t[1:5,1:5]
head(HWE_table_t)
HWE_table_t <- t(HWE_table)
HWE_table_t[1:5,1:5]
HWE_pops <-c("AMUR10", "AMUR11", "SUSIT13", "HAYLY09", "HAYLY10", "KOPE91T", "KOPE96T", "KUSHI06", "KUSHI07",
"LAKEL06", "LAKEL07", "NOME91", "NOME94", "SNOH03", "SNOH96", "SUSIT14", "TAUY09", "TAUY12")
source('~/GitHub/Pink/Extended_pop_analysis/SecondPinkFiltering.R')
##### Filter the loci by the HWE
##retain loci that were at least 0.05 in at least 9 of the populations
loci_HWE<-vector()
loci_HWE<-apply(HWE_table,2,function(x) sum(x >=0.05, na.rm=TRUE))
loci_HWE<-data.frame(keynames=names(loci_HWE), value=loci_HWE, row.names = NULL)
colnames(loci_HWE)<-c("Locus", "PopsHWE")
head(loci_HWE)
head(HWE_table)
loci_HWE<-apply(HWE_table,1,function(x) sum(x >=0.05, na.rm=TRUE))
loci_HWE<-data.frame(keynames=names(loci_HWE), value=loci_HWE, row.names = NULL)
colnames(loci_HWE)<-c("Locus", "PopsHWE")
head(loci_HWE)
dim(loci_HWE)
#if the loci does not pass the test, delete it
locipassedHWE<-vector()
locipassedHWE<-subset(loci_HWE, loci_HWE[,2]<=8)
dim(locipassedHWE)
head(locipassedHWE)
locipassedHWE<-subset(loci_HWE, loci_HWE[,2]>=9)
dim(locipassedHWE)
dim(locipassedHWE)
head(locipassedHWE)
# a second copy to use later to see what matches with our 16681
locipassedHWE_temp<-vector()
locipassedHWE_temp<-subset(loci_HWE, loci_HWE[,2]>=9)
head(locipassedHWE_temp)
#load genepop files
all_newGenos<-read.table("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/batch_4_31485TAGS_genepop_4R.txt", colClasses="factor")
all_newGenos[1:5,1:5]
dim(all_newGenos)
head(oneMAF)
temp_allnewGenos <- all_newGenos
colnames(all_newGenos)<-gsub("X","",colnames(all_newGenos))
head(colnames)
head(all_newGenos)
all_newGenos[1:5,1:5]
#filter dataset to include only loci that passed HWE
all_newGenos<-all_newGenos[,colnames(all_newGenos)%in%locipassedHWE_temp]
dim(all_newGenos)
#filter dataset to include only loci that passed HWE
all_newGenos <- temp_allnewGenos #reset
all_newGenos
all_newGenos[1:5,1:5]
head(locipassedHWE_temp)
all_newGenos<-all_newGenos[,colnames(all_newGenos)%in%locipassedHWE_temp$Locus]
dim(all_newGenos)
all_newGenos[1:5,1:5]
#filter dataset to include only loci that passed HWE
all_newGenos <- temp_allnewGenos #reset
dim(all_newGenos)
all_newGenos[1:5,1:5]
#format genotype dataset to remove X from locus names
#temp_allnewGenos <- all_newGenos
colnames(all_newGenos)<-gsub("X","",colnames(all_newGenos))
all_newGenos[1:5,1:5]
w
#filter dataset to include only loci that passed HWE
all_newGenos<-all_newGenos[,colnames(all_newGenos)%in%locipassedHWE_temp$Locus]
dim(all_newGenos)
all_newGenos[1:5,1:5]
#filter dataset to include only loci that passed HWE
all_newGenos_HWE_filtered<-all_newGenos[,colnames(all_newGenos)%in%locipassedHWE_temp$Locus]
dim(all_newGenos)
all_newGenos[1:5,1:5]
outputFile <- file("Z:/WORK/TARPEY/Exp_Pink_Pops/FilteringGenotypes/SecondFiltering/Loci_passed_HWE_filtered.txt", "wb")
write.table(colnames(all_newGenos_HWE_filtered),outputFile,quote=FALSE,row.names=FALSE,col.names=FALSE,eol="\n")
close(outputFile)
#get genotype rate per sample for filtered loci
all_newGenos_HWE_inds<-apply(all_newGenos_HWE_filtered,1,function(x) 1-(sum(x=="0000")/dim(all_newGenos_HWE_filtered)[2]))
all_newGenos_HWE_inds<-data.frame(keyName=names(all_newGenos_HWE_inds), value=all_newGenos_HWE_inds, row.names=NULL)
colnames(all_newGenos_HWE_inds)<-c("Sample","GenoRate")
dim(all_newGenos_HWE_inds)
head(all_newGenos_HWE_inds)
#plot ranked genotype rate for samples with filtered loci
all_newGenos_HWE_inds_ranked<-all_newGenos_HWE_inds[order(all_newGenos_HWE_inds$GenoRate),]
all_newGenos_HWE_inds_ranked$rank<-seq(1,dim(all_newGenos_HWE_inds_ranked)[1],by=1)
#plot ranked genotype rate for samples with filtered loci
all_newGenos_HWE_inds_ranked<-all_newGenos_HWE_inds[order(all_newGenos_HWE_inds$GenoRate),]
all_newGenos_HWE_inds_ranked$rank<-seq(1,dim(all_newGenos_HWE_inds_ranked)[1],by=1)
ggplot()+geom_point(data=all_newGenos_HWE_inds_ranked,aes(x=rank,y=GenoRate))+geom_hline(aes(yintercept=0.70),lty="dashed")+ggtitle("Sample Genotype Rate of Loci Genotyped in 70% of Samples")
ggplot()+geom_point(data=all_newGenos_HWE_inds_ranked,aes(x=rank,y=GenoRate))+geom_hline(aes(yintercept=0.80),lty="dashed")+ggtitle("Sample Genotype Rate of Loci Genotyped in 70% of Samples")
ggplot()+geom_point(data=all_newGenos_HWE_inds_ranked,aes(x=rank,y=GenoRate))+geom_hline(aes(yintercept=0.83),lty="dashed")+ggtitle("Sample Genotype Rate of Loci Genotyped in 70% of Samples")
ggplot()+geom_point(data=all_newGenos_HWE_inds_ranked,aes(x=rank,y=GenoRate))+geom_hline(aes(yintercept=0.82),lty="dashed")+ggtitle("Sample Genotype Rate of Loci Genotyped in 70% of Samples")
ggplot()+geom_point(data=all_newGenos_HWE_inds_ranked,aes(x=rank,y=GenoRate))+geom_hline(aes(yintercept=0.70),lty="dashed")+ggtitle("Sample Genotype Rate of Loci Genotyped in 82% of Samples")
ggplot()+geom_point(data=all_newGenos_HWE_inds_ranked,aes(x=rank,y=GenoRate))+geom_hline(aes(yintercept=0.80),lty="dashed")+ggtitle("Sample Genotype Rate of Loci Genotyped in 82% of Samples")
ggplot()+geom_point(data=all_newGenos_HWE_inds_ranked,aes(x=rank,y=GenoRate))+geom_hline(aes(yintercept=0.80),lty="dashed")+ggtitle("Sample Genotype Rate; Line Shows 80% Genotype Rate")
dim(all_newGenos_HWE_filtered)
#filter samples with >=80% genotype rate
filteredSamples<-all_newGenos_HWE_inds[all_newGenos_HWE_inds$GenoRate>=0.80,]
filteredGenos_filteredSamples<-all_newGenos_HWE_filtered[rownames(all_newGenos_HWE_filtered)%in%filteredSamples$Sample,]
i
dim(filteredGenos_filteredSamples)
#get genotype rate per locus for filtered sample dataset
locusGenoRate_filteredSamples<-apply(filteredGenos_filteredSamples,2,function(x) 1-(sum(x=="0000")/dim(all_newGenos_HWE_inds)[1]))
locusGenoRate_filteredSamples<-data.frame(keyName=names(locusGenoRate_filteredSamples), value=locusGenoRate_filteredSamples, row.names=NULL)
colnames(locusGenoRate_filteredSamples)<-c("Locus","GenoRate")
dim(locusGenoRate_filteredSamples)
head(locusGenoRate_filteredSamples)
#plot ranked genotype rate for samples with filtered loci
x_ranked<-locusGenoRate_filteredSamples[order(locusGenoRate_filteredSamples$GenoRate),]
x_ranked$rank<-seq(1,dim(x_ranked)[1],by=1)
ggplot()+geom_point(data=x_ranked,aes(x=rank,y=GenoRate))+geom_hline(aes(yintercept=0.80),lty="dashed")+ggtitle("Locus Genotype Rate; Line Shows 80% Genotype Rate")
x_80<-locusGenoRate_filteredSamples[locusGenoRate_filteredSamples$GenoRate>=0.80,]
length(x_80)
dim(x_80)
x_80<-locusGenoRate_filteredSamples[locusGenoRate_filteredSamples$GenoRate<0.80,]
dim(x_80)
head(x_80)
x_80<-locusGenoRate_filteredSamples[locusGenoRate_filteredSamples$GenoRate<0.75,]
dim(x_80)
x_80<-locusGenoRate_filteredSamples[locusGenoRate_filteredSamples$GenoRate<0.80,]
dim(x_80)
head(x_80)
install.packages("vcfR")
install.packages("vcfR")
#Pink data filtering
library(ggplot2)
library(vcfR)
library(stringr)
library(dplyr)
library(gdata)
load("~/GitHub/Pink/Extended_pop_analysis/.RData")
